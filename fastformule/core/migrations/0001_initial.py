# Generated by Django 4.1.4 on 2023-01-11 14:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChampionshipYear',
            fields=[
                ('year', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Circuit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_name', models.CharField(max_length=45, unique=True)),
                ('country', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, unique=True)),
                ('slug_name', models.SlugField(allow_unicode=True, blank=True, null=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('wiki_link', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GPEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_format', models.CharField(max_length=15)),
                ('gp_name', models.CharField(max_length=40)),
                ('gp_slug_name', models.SlugField(allow_unicode=True, blank=True, null=True)),
                ('circuit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.circuit', to_field='track_name')),
                ('drivers', models.ManyToManyField(to='core.driver')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeamChampionshipResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_points', models.FloatField()),
                ('team_rank', models.IntegerField(blank=True, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.team', to_field='name')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.championshipyear')),
            ],
        ),
        migrations.CreateModel(
            name='SessionResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(max_length=25)),
                ('session_date', models.DateField()),
                ('start_pos', models.IntegerField(blank=True, null=True)),
                ('end_pos', models.IntegerField(blank=True, null=True)),
                ('q1', models.DurationField(blank=True, null=True)),
                ('q2', models.DurationField(blank=True, null=True)),
                ('q3', models.DurationField(blank=True, null=True)),
                ('race_time', models.DurationField(blank=True, null=True)),
                ('finish_status', models.CharField(blank=True, max_length=100, null=True)),
                ('points', models.FloatField(blank=True, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.driver', to_field='full_name')),
                ('for_team', models.ForeignKey(default='No Team Assigned', on_delete=django.db.models.deletion.CASCADE, to='core.team', to_field='name')),
                ('gp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gpevent')),
            ],
        ),
        migrations.AddField(
            model_name='gpevent',
            name='teams',
            field=models.ManyToManyField(to='core.team'),
        ),
        migrations.AddField(
            model_name='gpevent',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.championshipyear'),
        ),
        migrations.CreateModel(
            name='DriverChampionshipResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_points', models.FloatField(blank=True, null=True)),
                ('driver_rank', models.IntegerField(blank=True, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.driver', to_field='full_name')),
                ('for_team', models.ManyToManyField(to='core.team')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.championshipyear')),
            ],
        ),
        migrations.AddConstraint(
            model_name='teamchampionshipresults',
            constraint=models.UniqueConstraint(fields=('year', 'team'), name='unique_team_standing'),
        ),
        migrations.AddConstraint(
            model_name='sessionresults',
            constraint=models.UniqueConstraint(fields=('session_date', 'driver'), name='unique_results'),
        ),
        migrations.AddConstraint(
            model_name='gpevent',
            constraint=models.UniqueConstraint(fields=('year', 'gp_name'), name='unique_gp'),
        ),
        migrations.AddConstraint(
            model_name='driverchampionshipresults',
            constraint=models.UniqueConstraint(fields=('year', 'driver'), name='unique_driver_standing'),
        ),
    ]
